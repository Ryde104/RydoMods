package com.ryde104.minecraftplus.objects.blocks;

import java.util.stream.Stream;

import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.HorizontalBlock;
import net.minecraft.item.BlockItemUseContext;
import net.minecraft.state.DirectionProperty;
import net.minecraft.state.StateContainer.Builder;
import net.minecraft.util.Direction;
import net.minecraft.util.Mirror;
import net.minecraft.util.Rotation;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.shapes.IBooleanFunction;
import net.minecraft.util.math.shapes.ISelectionContext;
import net.minecraft.util.math.shapes.VoxelShape;
import net.minecraft.util.math.shapes.VoxelShapes;
import net.minecraft.world.IBlockReader;

public class SpecialBlock extends Block {

	public static final DirectionProperty FACING = HorizontalBlock.HORIZONTAL_FACING;

	private static final VoxelShape SHAPE_N = Stream.of(
			Block.makeCuboidShape(-5.617029850342174, 13.919635655698224, -16, 21.617029850342174, 15.652712182105411, 32),
			Block.makeCuboidShape(13.54703716039876, 6.116533226127565, 24.412478600297312, 16.862935494574756, 13.121535672257611, 27.72837882337682),
			Block.makeCuboidShape(2.269691976504559, 8.515069987023233, -8.70198328572247, 13.730308023495441, 9.56305821033948, 24.70198328572247),
			Block.makeCuboidShape(10.712116466012645, 8.513876672230538, -8.676432087937272, 17.03302275562059, 14.83478243058437, 24.676432087937272),
			Block.makeCuboidShape(2.2908675293079117, 8.513876672230538, -11.820776427491605, 13.709131054014456, 14.83478243058437, -5.4998687212060275),
			Block.makeCuboidShape(13.823323771284008, 2.1674749074909503, 24.718418635166472, 16.51597414217021, 7.070172135776903, 27.411071367182064),
			Block.makeCuboidShape(14.270640678292658, 0.34728781789458996, 25.0989741365035, 18.209939976942785, 3.9700158604931426, 29.03827674073477),
			Block.makeCuboidShape(13.282511807221027, 8.712415542401791, 24.13725024760377, 17.84459581557502, 14.07517458190695, 28.699335672635392),
			Block.makeCuboidShape(13.54703716039876, 6.116533226127565, -11.728378823376818, 16.862935494574756, 13.121535672257611, -8.412478600297312),
			Block.makeCuboidShape(-0.8629354945747547, 6.116533226127565, 24.412478600297312, 2.4529628396012395, 13.121535672257611, 27.72837882337682),
			Block.makeCuboidShape(-0.8629354945747547, 6.116533226127565, -11.728378823376818, 2.4529628396012395, 13.121535672257611, -8.412478600297312),
			Block.makeCuboidShape(15.51970031916173, 11.69095027902253, -8.676432087937272, 18.558159339085254, 14.729408531579004, 24.676432087937272),
			Block.makeCuboidShape(17.832158330410778, 13.217894129949006, -8.676432087937272, 19.28706075909995, 14.672795200988778, 24.676432087937272),
			Block.makeCuboidShape(-1.033022755620589, 8.513876672230538, -8.676432087937272, 5.2878835339873556, 14.83478243058437, 24.676432087937272),
			Block.makeCuboidShape(-2.558159339085254, 11.69095027902253, -8.676432087937272, 0.4802996808382698, 14.729408531579004, 24.676432087937272),
			Block.makeCuboidShape(-3.2870607590999494, 13.217894129949006, -8.676432087937272, -1.8321583304107794, 14.672795200988778, 24.676432087937272),
			Block.makeCuboidShape(2.2908675293079117, 11.69095027902253, -13.34591301095627, 13.709130581788578, 14.72940847255077, -10.307453046580989),
			Block.makeCuboidShape(2.2908675293079117, 13.217894129949006, -14.074814430970967, 13.709130581788578, 14.672795200988778, -12.619911057830041),
			Block.makeCuboidShape(2.2908675293079117, 8.513876672230538, 21.499868721206028, 13.709131054014456, 14.83478243058437, 27.820776427491605),
			Block.makeCuboidShape(2.2908675293079117, 11.69095027902253, 26.30745304658099, 13.709130581788578, 14.72940847255077, 29.34591301095627),
			Block.makeCuboidShape(2.2908675293079117, 13.217894129949006, 28.61991105783004, 13.709130581788578, 14.672795200988778, 30.074814430970967),
			Block.makeCuboidShape(13.823323771284008, 2.1674749074909503, -11.411071367182064, 16.51597414217021, 7.070172135776903, -8.718418635166472),
			Block.makeCuboidShape(-0.5159741421702115, 2.1674749074909503, 24.718418635166472, 2.1766762287159924, 7.070172135776903, 27.411071367182064),
			Block.makeCuboidShape(-0.5159741421702115, 2.1674749074909503, -11.411071367182064, 2.1766762287159924, 7.070172135776903, -8.718418635166472),
			Block.makeCuboidShape(14.270640678292658, 0.34728781789458996, -13.03827674073477, 18.209939976942785, 3.9700158604931426, -9.0989741365035),
			Block.makeCuboidShape(-2.2099399769427848, 0.34728781789458996, 25.0989741365035, 1.7293593217073422, 3.9700158604931426, 29.03827674073477),
			Block.makeCuboidShape(-2.2099399769427848, 0.34728781789458996, -13.03827674073477, 1.7293593217073422, 3.9700158604931426, -9.0989741365035),
			Block.makeCuboidShape(13.282511807221027, 8.712415542401791, -12.699335672635392, 17.84459581557502, 14.07517458190695, -8.13725024760377),
			Block.makeCuboidShape(-1.8445958155750173, 8.712415542401791, 24.13725024760377, 2.7174881927789736, 14.07517458190695, 28.699335672635392),
			Block.makeCuboidShape(-1.8445958155750173, 8.712415542401791, -12.699335672635392, 2.7174881927789736, 14.07517458190695, -8.13725024760377)
			).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);}).get();
	
	private static final VoxelShape SHAPE_W = Stream.of(
			Block.makeCuboidShape(-16, 13.919635655698224, -5.617029850342174, 32, 15.652712182105411, 21.617029850342174),
			Block.makeCuboidShape(-11.728378823376818, 6.116533226127565, 13.54703716039876, -8.412478600297312, 13.121535672257611, 16.862935494574756),
			Block.makeCuboidShape(-8.70198328572247, 8.515069987023233, 2.269691976504559, 24.70198328572247, 9.56305821033948, 13.730308023495441),
			Block.makeCuboidShape(-8.676432087937272, 8.513876672230538, 10.712116466012645, 24.676432087937272, 14.83478243058437, 17.03302275562059),
			Block.makeCuboidShape(21.499868721206028, 8.513876672230538, 2.2908675293079117, 27.820776427491605, 14.83478243058437, 13.709131054014456),
			Block.makeCuboidShape(-11.411071367182064, 2.1674749074909503, 13.823323771284008, -8.718418635166472, 7.070172135776903, 16.51597414217021),
			Block.makeCuboidShape(-13.03827674073477, 0.34728781789458996, 14.270640678292658, -9.0989741365035, 3.9700158604931426, 18.209939976942785),
			Block.makeCuboidShape(-12.699335672635392, 8.712415542401791, 13.282511807221027, -8.13725024760377, 14.07517458190695, 17.84459581557502),
			Block.makeCuboidShape(24.412478600297312, 6.116533226127565, 13.54703716039876, 27.72837882337682, 13.121535672257611, 16.862935494574756),
			Block.makeCuboidShape(-11.728378823376818, 6.116533226127565, -0.8629354945747547, -8.412478600297312, 13.121535672257611, 2.4529628396012395),
			Block.makeCuboidShape(24.412478600297312, 6.116533226127565, -0.8629354945747547, 27.72837882337682, 13.121535672257611, 2.4529628396012395),
			Block.makeCuboidShape(-8.676432087937272, 11.69095027902253, 15.51970031916173, 24.676432087937272, 14.729408531579004, 18.558159339085254),
			Block.makeCuboidShape(-8.676432087937272, 13.217894129949006, 17.832158330410778, 24.676432087937272, 14.672795200988778, 19.28706075909995),
			Block.makeCuboidShape(-8.676432087937272, 8.513876672230538, -1.033022755620589, 24.676432087937272, 14.83478243058437, 5.2878835339873556),
			Block.makeCuboidShape(-8.676432087937272, 11.69095027902253, -2.558159339085254, 24.676432087937272, 14.729408531579004, 0.4802996808382698),
			Block.makeCuboidShape(-8.676432087937272, 13.217894129949006, -3.2870607590999494, 24.676432087937272, 14.672795200988778, -1.8321583304107794),
			Block.makeCuboidShape(26.30745304658099, 11.69095027902253, 2.2908675293079117, 29.34591301095627, 14.72940847255077, 13.709130581788578),
			Block.makeCuboidShape(28.61991105783004, 13.217894129949006, 2.2908675293079117, 30.074814430970967, 14.672795200988778, 13.709130581788578),
			Block.makeCuboidShape(-11.820776427491605, 8.513876672230538, 2.2908675293079117, -5.4998687212060275, 14.83478243058437, 13.709131054014456),
			Block.makeCuboidShape(-13.34591301095627, 11.69095027902253, 2.2908675293079117, -10.307453046580989, 14.72940847255077, 13.709130581788578),
			Block.makeCuboidShape(-14.074814430970967, 13.217894129949006, 2.2908675293079117, -12.619911057830041, 14.672795200988778, 13.709130581788578),
			Block.makeCuboidShape(24.718418635166472, 2.1674749074909503, 13.823323771284008, 27.411071367182064, 7.070172135776903, 16.51597414217021),
			Block.makeCuboidShape(-11.411071367182064, 2.1674749074909503, -0.5159741421702115, -8.718418635166472, 7.070172135776903, 2.1766762287159924),
			Block.makeCuboidShape(24.718418635166472, 2.1674749074909503, -0.5159741421702115, 27.411071367182064, 7.070172135776903, 2.1766762287159924),
			Block.makeCuboidShape(25.0989741365035, 0.34728781789458996, 14.270640678292658, 29.03827674073477, 3.9700158604931426, 18.209939976942785),
			Block.makeCuboidShape(-13.03827674073477, 0.34728781789458996, -2.2099399769427848, -9.0989741365035, 3.9700158604931426, 1.7293593217073422),
			Block.makeCuboidShape(25.0989741365035, 0.34728781789458996, -2.2099399769427848, 29.03827674073477, 3.9700158604931426, 1.7293593217073422),
			Block.makeCuboidShape(24.13725024760377, 8.712415542401791, 13.282511807221027, 28.699335672635392, 14.07517458190695, 17.84459581557502),
			Block.makeCuboidShape(-12.699335672635392, 8.712415542401791, -1.8445958155750173, -8.13725024760377, 14.07517458190695, 2.7174881927789736),
			Block.makeCuboidShape(24.13725024760377, 8.712415542401791, -1.8445958155750173, 28.699335672635392, 14.07517458190695, 2.7174881927789736)
			).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);}).get();
	
	private static final VoxelShape SHAPE_S = Stream.of(
			Block.makeCuboidShape(-5.617029850342174, 13.919635655698224, -16, 21.617029850342174, 15.652712182105411, 32),
			Block.makeCuboidShape(-0.8629354945747565, 6.116533226127565, -11.728378823376818, 2.4529628396012395, 13.121535672257611, -8.412478600297312),
			Block.makeCuboidShape(2.269691976504559, 8.515069987023233, -8.70198328572247, 13.730308023495441, 9.56305821033948, 24.70198328572247),
			Block.makeCuboidShape(-1.033022755620589, 8.513876672230538, -8.676432087937272, 5.287883533987355, 14.83478243058437, 24.676432087937272),
			Block.makeCuboidShape(2.290868945985544, 8.513876672230538, 21.499868721206028, 13.709132470692088, 14.83478243058437, 27.820776427491605),
			Block.makeCuboidShape(-0.5159741421702115, 2.1674749074909503, -11.411071367182064, 2.1766762287159924, 7.070172135776903, -8.718418635166472),
			Block.makeCuboidShape(-2.2099399769427848, 0.34728781789458996, -13.03827674073477, 1.7293593217073422, 3.9700158604931426, -9.0989741365035),
			Block.makeCuboidShape(-1.844595815575019, 8.712415542401791, -12.699335672635392, 2.7174881927789727, 14.07517458190695, -8.13725024760377),
			Block.makeCuboidShape(-0.8629354945747565, 6.116533226127565, 24.412478600297312, 2.4529628396012395, 13.121535672257611, 27.72837882337682),
			Block.makeCuboidShape(13.54703716039876, 6.116533226127565, -11.728378823376818, 16.862935494574756, 13.121535672257611, -8.412478600297312),
			Block.makeCuboidShape(13.54703716039876, 6.116533226127565, 24.412478600297312, 16.862935494574756, 13.121535672257611, 27.72837882337682),
			Block.makeCuboidShape(-2.558159339085254, 11.69095027902253, -8.676432087937272, 0.4802996808382698, 14.729408531579004, 24.676432087937272),
			Block.makeCuboidShape(-3.287060759099951, 13.217894129949006, -8.676432087937272, -1.8321583304107776, 14.672795200988778, 24.676432087937272),
			Block.makeCuboidShape(10.712116466012645, 8.513876672230538, -8.676432087937272, 17.03302275562059, 14.83478243058437, 24.676432087937272),
			Block.makeCuboidShape(15.51970031916173, 11.69095027902253, -8.676432087937272, 18.558159339085254, 14.729408531579004, 24.676432087937272),
			Block.makeCuboidShape(17.832158330410778, 13.217894129949006, -8.676432087937272, 19.28706075909995, 14.672795200988778, 24.676432087937272),
			Block.makeCuboidShape(2.2908694182114218, 11.69095027902253, 26.30745304658099, 13.709132470692088, 14.72940847255077, 29.34591301095627),
			Block.makeCuboidShape(2.2908694182114218, 13.217894129949006, 28.61991105783004, 13.709132470692088, 14.672795200988778, 30.074814430970967),
			Block.makeCuboidShape(2.290868945985544, 8.513876672230538, -11.820776427491605, 13.709132470692088, 14.83478243058437, -5.4998687212060275),
			Block.makeCuboidShape(2.2908694182114218, 11.69095027902253, -13.34591301095627, 13.709132470692088, 14.72940847255077, -10.307453046580989),
			Block.makeCuboidShape(2.2908694182114218, 13.217894129949006, -14.074814430970967, 13.709132470692088, 14.672795200988778, -12.619911057830041),
			Block.makeCuboidShape(-0.5159741421702115, 2.1674749074909503, 24.718418635166472, 2.1766762287159924, 7.070172135776903, 27.411071367182064),
			Block.makeCuboidShape(13.823323771284008, 2.1674749074909503, -11.411071367182064, 16.51597414217021, 7.070172135776903, -8.718418635166472),
			Block.makeCuboidShape(13.823323771284008, 2.1674749074909503, 24.718418635166472, 16.51597414217021, 7.070172135776903, 27.411071367182064),
			Block.makeCuboidShape(-2.2099399769427848, 0.34728781789458996, 25.0989741365035, 1.7293593217073422, 3.9700158604931426, 29.03827674073477),
			Block.makeCuboidShape(14.270640678292658, 0.34728781789458996, -13.03827674073477, 18.209939976942785, 3.9700158604931426, -9.0989741365035),
			Block.makeCuboidShape(14.270640678292658, 0.34728781789458996, 25.0989741365035, 18.209939976942785, 3.9700158604931426, 29.03827674073477),
			Block.makeCuboidShape(-1.844595815575019, 8.712415542401791, 24.13725024760377, 2.7174881927789727, 14.07517458190695, 28.699335672635392),
			Block.makeCuboidShape(13.282511807221027, 8.712415542401791, -12.699335672635392, 17.84459581557502, 14.07517458190695, -8.13725024760377),
			Block.makeCuboidShape(13.282511807221027, 8.712415542401791, 24.13725024760377, 17.84459581557502, 14.07517458190695, 28.699335672635392)
			).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);}).get();
	
	private static final VoxelShape SHAPE_E = Stream.of(
			Block.makeCuboidShape(-16, 13.919635655698224, -5.617029850342174, 32, 15.652712182105411, 21.617029850342174),
			Block.makeCuboidShape(24.412478600297312, 6.116533226127565, -0.8629354945747565, 27.72837882337682, 13.121535672257611, 2.4529628396012395),
			Block.makeCuboidShape(-8.70198328572247, 8.515069987023233, 2.269691976504559, 24.70198328572247, 9.56305821033948, 13.730308023495441),
			Block.makeCuboidShape(-8.676432087937272, 8.513876672230538, -1.033022755620589, 24.676432087937272, 14.83478243058437, 5.287883533987355),
			Block.makeCuboidShape(-11.820776427491605, 8.513876672230538, 2.290868945985544, -5.4998687212060275, 14.83478243058437, 13.709132470692088),
			Block.makeCuboidShape(24.718418635166472, 2.1674749074909503, -0.5159741421702115, 27.411071367182064, 7.070172135776903, 2.1766762287159924),
			Block.makeCuboidShape(25.0989741365035, 0.34728781789458996, -2.2099399769427848, 29.03827674073477, 3.9700158604931426, 1.7293593217073422),
			Block.makeCuboidShape(24.13725024760377, 8.712415542401791, -1.844595815575019, 28.699335672635392, 14.07517458190695, 2.7174881927789727),
			Block.makeCuboidShape(-11.728378823376818, 6.116533226127565, -0.8629354945747565, -8.412478600297312, 13.121535672257611, 2.4529628396012395),
			Block.makeCuboidShape(24.412478600297312, 6.116533226127565, 13.54703716039876, 27.72837882337682, 13.121535672257611, 16.862935494574756),
			Block.makeCuboidShape(-11.728378823376818, 6.116533226127565, 13.54703716039876, -8.412478600297312, 13.121535672257611, 16.862935494574756),
			Block.makeCuboidShape(-8.676432087937272, 11.69095027902253, -2.558159339085254, 24.676432087937272, 14.729408531579004, 0.4802996808382698),
			Block.makeCuboidShape(-8.676432087937272, 13.217894129949006, -3.287060759099951, 24.676432087937272, 14.672795200988778, -1.8321583304107776),
			Block.makeCuboidShape(-8.676432087937272, 8.513876672230538, 10.712116466012645, 24.676432087937272, 14.83478243058437, 17.03302275562059),
			Block.makeCuboidShape(-8.676432087937272, 11.69095027902253, 15.51970031916173, 24.676432087937272, 14.729408531579004, 18.558159339085254),
			Block.makeCuboidShape(-8.676432087937272, 13.217894129949006, 17.832158330410778, 24.676432087937272, 14.672795200988778, 19.28706075909995),
			Block.makeCuboidShape(-13.34591301095627, 11.69095027902253, 2.2908694182114218, -10.307453046580989, 14.72940847255077, 13.709132470692088),
			Block.makeCuboidShape(-14.074814430970967, 13.217894129949006, 2.2908694182114218, -12.619911057830041, 14.672795200988778, 13.709132470692088),
			Block.makeCuboidShape(21.499868721206028, 8.513876672230538, 2.290868945985544, 27.820776427491605, 14.83478243058437, 13.709132470692088),
			Block.makeCuboidShape(26.30745304658099, 11.69095027902253, 2.2908694182114218, 29.34591301095627, 14.72940847255077, 13.709132470692088),
			Block.makeCuboidShape(28.61991105783004, 13.217894129949006, 2.2908694182114218, 30.074814430970967, 14.672795200988778, 13.709132470692088),
			Block.makeCuboidShape(-11.411071367182064, 2.1674749074909503, -0.5159741421702115, -8.718418635166472, 7.070172135776903, 2.1766762287159924),
			Block.makeCuboidShape(24.718418635166472, 2.1674749074909503, 13.823323771284008, 27.411071367182064, 7.070172135776903, 16.51597414217021),
			Block.makeCuboidShape(-11.411071367182064, 2.1674749074909503, 13.823323771284008, -8.718418635166472, 7.070172135776903, 16.51597414217021),
			Block.makeCuboidShape(-13.03827674073477, 0.34728781789458996, -2.2099399769427848, -9.0989741365035, 3.9700158604931426, 1.7293593217073422),
			Block.makeCuboidShape(25.0989741365035, 0.34728781789458996, 14.270640678292658, 29.03827674073477, 3.9700158604931426, 18.209939976942785),
			Block.makeCuboidShape(-13.03827674073477, 0.34728781789458996, 14.270640678292658, -9.0989741365035, 3.9700158604931426, 18.209939976942785),
			Block.makeCuboidShape(-12.699335672635392, 8.712415542401791, -1.844595815575019, -8.13725024760377, 14.07517458190695, 2.7174881927789727),
			Block.makeCuboidShape(24.13725024760377, 8.712415542401791, 13.282511807221027, 28.699335672635392, 14.07517458190695, 17.84459581557502),
			Block.makeCuboidShape(-12.699335672635392, 8.712415542401791, 13.282511807221027, -8.13725024760377, 14.07517458190695, 17.84459581557502)
			).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);}).get();
	

	public SpecialBlock(Properties properties) {
		super(properties);
		this.setDefaultState(this.stateContainer.getBaseState().with(FACING, Direction.NORTH));
	}

	@Override
	public VoxelShape getShape(BlockState state, IBlockReader worldIn, BlockPos pos, ISelectionContext context) {
		switch (state.get(FACING)) {
		case NORTH:
			return SHAPE_N;
		case SOUTH:
			return SHAPE_S;
		case EAST:
			return SHAPE_E;
		case WEST:
			return SHAPE_W;
		default:
			return SHAPE_N;
		}
	}

	@Override
	public BlockState getStateForPlacement(BlockItemUseContext context) {
		return this.getDefaultState().with(FACING, context.getPlacementHorizontalFacing().getOpposite());
	}

	
	@Override
	public BlockState rotate(BlockState state, Rotation rot) {
		return state.with(FACING, rot.rotate(state.get(FACING)));
	}

	
	@Override
	public BlockState mirror(BlockState state, Mirror mirrorIn) {
		return state.rotate(mirrorIn.toRotation(state.get(FACING)));
	}

	@Override
	protected void fillStateContainer(Builder<Block, BlockState> builder) {
		builder.add(FACING);
	}

	
}